package utils

import (
	"fmt"
	"testing"

	"github.com/stretchr/testify/require"
)

func Test_PRNG(t *testing.T) {

	t.Run(fmt.Sprintf("PRNG"), func(t *testing.T) {

		key := []byte{0x49, 0x0a, 0x42, 0x3d, 0x97, 0x9d, 0xc1, 0x07, 0xa1, 0xd7, 0xe9, 0x7b, 0x3b, 0xce, 0xa1, 0xdb,
			0x42, 0xf3, 0xa6, 0xd5, 0x75, 0xd2, 0x0c, 0x92, 0xb7, 0x35, 0xce, 0x0c, 0xee, 0x09, 0x7c, 0x98}

		seed := []byte{0x48, 0xc3, 0x31, 0x12, 0x74, 0x98, 0xd3, 0xf2, 0x7b, 0x15, 0x15, 0x9b, 0x50, 0xc4, 0x9c, 0x00,
			0x7d, 0xa5, 0xea, 0x68, 0x1f, 0xed, 0x4f, 0x99, 0x54, 0xc0, 0x52, 0xc0, 0x75, 0xff, 0xf7, 0x5c}

		Ha, _ := NewSeededPRNG(key)
		Hb, _ := NewSeededPRNG(key)

		sum0 := make([]byte, 512)
		sum1 := make([]byte, 512)

		Ha.Seed(seed)
		Hb.Seed(seed)

		Ha.SetClock(sum0, 256)
		Hb.SetClock(sum1, 256)

		Ha.Clock(sum0)
		Hb.Clock(sum1)

		require.Equal(t, sum0, sum1)
	})

}
