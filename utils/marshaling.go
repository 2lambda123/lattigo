package utils

// BinaryMarshalerSize is an interface implemented by an object that can marshal itself into a binary form.
type BinaryMarshalerSize interface {
	// MarshalBinarySize returns the size in bytes that the object once marshaled into a binary form.
	MarshalBinarySize() int
}

// BinaryMarshaler is an interface implemented by an object that can marshal itself into a binary form.
type BinaryMarshaler interface {
	// MarshalBinary encodes the object into a binary form on a newly allocated slice of bytes.
	MarshalBinary() (data []byte, err error)
}

// BinaryMarshalerInPlace is an interface implemented by an object that can marshal itself into a binary form.
type BinaryMarshalerInPlace interface {
	// MarshalBinaryInPlace encodes the object into a binary form on a preallocated slice of bytes
	// and returns the number of bytes written.
	MarshalBinaryInPlace(data []byte) (ptr int, err error)
}

// BinaryUnmarshaler is an interface implemented by an object that can unmarshal a binary representation of itself.
type BinaryUnmarshaler interface {
	// UnmarshalBinary decodes a slice of bytes generated by MarshalBinary
	// or MarshalBinaryInPlace on the object.
	UnmarshalBinary(data []byte) (ptr int, err error)
}

// BinaryUnmarshalerInPlace is an interface implemented by an object that can unmarshal a binary representation of itself.
type BinaryUnmarshalerInPlace interface {
	// UnmarshalBinaryInPlace decodes a slice of bytes generated by MarshalBinary or
	// MarshalBinaryInPlace on the object and returns the number of bytes read.
	UnmarshalBinaryInPlace(data []byte) (ptr int, err error)
}
